openapi: 3.0.3
info:
  title: Send'IT API
  version: '1.0'
servers:
  - url: http://localhost:5000/
tags:
  - name: Home
    description: Default route
  - name: Auth
    description: Operations related to user authentication
  - name: Users
    description: User profile and search operations
  - name: Messages
    description: Private messaging and conversation handling
  - name: Groups
    description: Group chat creation and management
paths:
  /:
    get:
      tags: [Home]
      summary: Home route
      responses:
        '200':
          description: OK

  /auth/register:
    post:
      tags: [Auth]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, email, password]
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input

  /auth/login:
    post:
      tags: [Auth]
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
        '401':
          description: Unauthorized

  /users/{id}:
    get:
      tags: [Users]
      summary: Find a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
        '404':
          description: User not found

  /users/search:
    get:
      tags: [Users]
      summary: Search for users to start a conversation
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of matching users
        '400':
          description: Invalid query

  /messages/private:
    post:
      tags: [Messages]
      summary: Send a private message (creates chat if not exists)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [toUserId, text]
              properties:
                toUserId:
                  type: string
                text:
                  type: string
      responses:
        '201':
          description: Message sent and conversation created if needed
        '400':
          description: Invalid input

  /messages/private/{id}:
    delete:
      tags: [Messages]
      summary: Delete a private message (sent by current user)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Message deleted
        '403':
          description: Not allowed to delete this message
        '404':
          description: Message not found

  /messages/conversations:
    get:
      tags: [Messages]
      summary: Get list of user's conversations
      responses:
        '200':
          description: List of all chat conversations for the logged-in user

  /groups:
    post:
      tags: [Groups]
      summary: Create a new group chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [groupName, memberIds]
              properties:
                groupName:
                  type: string
                memberIds:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Group created successfully
        '400':
          description: Invalid input

  /groups/{groupId}/members:
    post:
      tags: [Groups]
      summary: Add users to a group chat
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [userIds]
              properties:
                userIds:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Members added to group
        '403':
          description: Not allowed
        '404':
          description: Group not found
